// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.12.4
// source: order.proto

package grpcmodel

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarId           int64   `protobuf:"varint,1,opt,name=car_id,json=carId,proto3" json:"car_id,omitempty"`
	OrderDate       string  `protobuf:"bytes,2,opt,name=order_date,json=orderDate,proto3" json:"order_date,omitempty"`
	PickupDate      string  `protobuf:"bytes,3,opt,name=pickup_date,json=pickupDate,proto3" json:"pickup_date,omitempty"`
	DropoffDate     string  `protobuf:"bytes,4,opt,name=dropoff_date,json=dropoffDate,proto3" json:"dropoff_date,omitempty"`
	PickupLocation  string  `protobuf:"bytes,5,opt,name=pickup_location,json=pickupLocation,proto3" json:"pickup_location,omitempty"`
	PickupLat       float64 `protobuf:"fixed64,6,opt,name=pickup_lat,json=pickupLat,proto3" json:"pickup_lat,omitempty"`
	PickupLong      float64 `protobuf:"fixed64,7,opt,name=pickup_long,json=pickupLong,proto3" json:"pickup_long,omitempty"`
	DropoffLocation string  `protobuf:"bytes,8,opt,name=dropoff_location,json=dropoffLocation,proto3" json:"dropoff_location,omitempty"`
	DropoffLat      float64 `protobuf:"fixed64,9,opt,name=dropoff_lat,json=dropoffLat,proto3" json:"dropoff_lat,omitempty"`
	DropoffLong     float64 `protobuf:"fixed64,10,opt,name=dropoff_long,json=dropoffLong,proto3" json:"dropoff_long,omitempty"`
	CreatedBy       int64   `protobuf:"varint,11,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
}

func (x *CreateOrderRequest) Reset() {
	*x = CreateOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderRequest) ProtoMessage() {}

func (x *CreateOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderRequest.ProtoReflect.Descriptor instead.
func (*CreateOrderRequest) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{0}
}

func (x *CreateOrderRequest) GetCarId() int64 {
	if x != nil {
		return x.CarId
	}
	return 0
}

func (x *CreateOrderRequest) GetOrderDate() string {
	if x != nil {
		return x.OrderDate
	}
	return ""
}

func (x *CreateOrderRequest) GetPickupDate() string {
	if x != nil {
		return x.PickupDate
	}
	return ""
}

func (x *CreateOrderRequest) GetDropoffDate() string {
	if x != nil {
		return x.DropoffDate
	}
	return ""
}

func (x *CreateOrderRequest) GetPickupLocation() string {
	if x != nil {
		return x.PickupLocation
	}
	return ""
}

func (x *CreateOrderRequest) GetPickupLat() float64 {
	if x != nil {
		return x.PickupLat
	}
	return 0
}

func (x *CreateOrderRequest) GetPickupLong() float64 {
	if x != nil {
		return x.PickupLong
	}
	return 0
}

func (x *CreateOrderRequest) GetDropoffLocation() string {
	if x != nil {
		return x.DropoffLocation
	}
	return ""
}

func (x *CreateOrderRequest) GetDropoffLat() float64 {
	if x != nil {
		return x.DropoffLat
	}
	return 0
}

func (x *CreateOrderRequest) GetDropoffLong() float64 {
	if x != nil {
		return x.DropoffLong
	}
	return 0
}

func (x *CreateOrderRequest) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

type SingleOrderReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CarId           int64   `protobuf:"varint,2,opt,name=car_id,json=carId,proto3" json:"car_id,omitempty"`
	OrderDate       string  `protobuf:"bytes,3,opt,name=order_date,json=orderDate,proto3" json:"order_date,omitempty"`
	PickupDate      string  `protobuf:"bytes,4,opt,name=pickup_date,json=pickupDate,proto3" json:"pickup_date,omitempty"`
	DropoffDate     string  `protobuf:"bytes,5,opt,name=dropoff_date,json=dropoffDate,proto3" json:"dropoff_date,omitempty"`
	PickupLocation  string  `protobuf:"bytes,6,opt,name=pickup_location,json=pickupLocation,proto3" json:"pickup_location,omitempty"`
	PickupLat       float64 `protobuf:"fixed64,7,opt,name=pickup_lat,json=pickupLat,proto3" json:"pickup_lat,omitempty"`
	PickupLong      float64 `protobuf:"fixed64,8,opt,name=pickup_long,json=pickupLong,proto3" json:"pickup_long,omitempty"`
	DropoffLocation string  `protobuf:"bytes,9,opt,name=dropoff_location,json=dropoffLocation,proto3" json:"dropoff_location,omitempty"`
	DropoffLat      float64 `protobuf:"fixed64,10,opt,name=dropoff_lat,json=dropoffLat,proto3" json:"dropoff_lat,omitempty"`
	DropoffLong     float64 `protobuf:"fixed64,11,opt,name=dropoff_long,json=dropoffLong,proto3" json:"dropoff_long,omitempty"`
	CreatedBy       int64   `protobuf:"varint,12,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	CreatedAt       string  `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedBy       int64   `protobuf:"varint,14,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	UpdatedAt       string  `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedBy       *int64  `protobuf:"varint,16,opt,name=deleted_by,json=deletedBy,proto3,oneof" json:"deleted_by,omitempty"`
	DeletedAt       *string `protobuf:"bytes,17,opt,name=deleted_at,json=deletedAt,proto3,oneof" json:"deleted_at,omitempty"`
}

func (x *SingleOrderReply) Reset() {
	*x = SingleOrderReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleOrderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleOrderReply) ProtoMessage() {}

func (x *SingleOrderReply) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleOrderReply.ProtoReflect.Descriptor instead.
func (*SingleOrderReply) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1}
}

func (x *SingleOrderReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SingleOrderReply) GetCarId() int64 {
	if x != nil {
		return x.CarId
	}
	return 0
}

func (x *SingleOrderReply) GetOrderDate() string {
	if x != nil {
		return x.OrderDate
	}
	return ""
}

func (x *SingleOrderReply) GetPickupDate() string {
	if x != nil {
		return x.PickupDate
	}
	return ""
}

func (x *SingleOrderReply) GetDropoffDate() string {
	if x != nil {
		return x.DropoffDate
	}
	return ""
}

func (x *SingleOrderReply) GetPickupLocation() string {
	if x != nil {
		return x.PickupLocation
	}
	return ""
}

func (x *SingleOrderReply) GetPickupLat() float64 {
	if x != nil {
		return x.PickupLat
	}
	return 0
}

func (x *SingleOrderReply) GetPickupLong() float64 {
	if x != nil {
		return x.PickupLong
	}
	return 0
}

func (x *SingleOrderReply) GetDropoffLocation() string {
	if x != nil {
		return x.DropoffLocation
	}
	return ""
}

func (x *SingleOrderReply) GetDropoffLat() float64 {
	if x != nil {
		return x.DropoffLat
	}
	return 0
}

func (x *SingleOrderReply) GetDropoffLong() float64 {
	if x != nil {
		return x.DropoffLong
	}
	return 0
}

func (x *SingleOrderReply) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *SingleOrderReply) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *SingleOrderReply) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *SingleOrderReply) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *SingleOrderReply) GetDeletedBy() int64 {
	if x != nil && x.DeletedBy != nil {
		return *x.DeletedBy
	}
	return 0
}

func (x *SingleOrderReply) GetDeletedAt() string {
	if x != nil && x.DeletedAt != nil {
		return *x.DeletedAt
	}
	return ""
}

type UpdateOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarId           *int64   `protobuf:"varint,1,opt,name=car_id,json=carId,proto3,oneof" json:"car_id,omitempty"`
	OrderDate       *string  `protobuf:"bytes,2,opt,name=order_date,json=orderDate,proto3,oneof" json:"order_date,omitempty"`
	PickupDate      *string  `protobuf:"bytes,3,opt,name=pickup_date,json=pickupDate,proto3,oneof" json:"pickup_date,omitempty"`
	DropoffDate     *string  `protobuf:"bytes,4,opt,name=dropoff_date,json=dropoffDate,proto3,oneof" json:"dropoff_date,omitempty"`
	PickupLocation  *string  `protobuf:"bytes,5,opt,name=pickup_location,json=pickupLocation,proto3,oneof" json:"pickup_location,omitempty"`
	PickupLat       *float64 `protobuf:"fixed64,6,opt,name=pickup_lat,json=pickupLat,proto3,oneof" json:"pickup_lat,omitempty"`
	PickupLong      *float64 `protobuf:"fixed64,7,opt,name=pickup_long,json=pickupLong,proto3,oneof" json:"pickup_long,omitempty"`
	DropoffLocation *string  `protobuf:"bytes,8,opt,name=dropoff_location,json=dropoffLocation,proto3,oneof" json:"dropoff_location,omitempty"`
	DropoffLat      *float64 `protobuf:"fixed64,9,opt,name=dropoff_lat,json=dropoffLat,proto3,oneof" json:"dropoff_lat,omitempty"`
	DropoffLong     *float64 `protobuf:"fixed64,10,opt,name=dropoff_long,json=dropoffLong,proto3,oneof" json:"dropoff_long,omitempty"`
	UpdatedBy       int64    `protobuf:"varint,11,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	Id              int64    `protobuf:"varint,12,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateOrderRequest) Reset() {
	*x = UpdateOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderRequest) ProtoMessage() {}

func (x *UpdateOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrderRequest) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateOrderRequest) GetCarId() int64 {
	if x != nil && x.CarId != nil {
		return *x.CarId
	}
	return 0
}

func (x *UpdateOrderRequest) GetOrderDate() string {
	if x != nil && x.OrderDate != nil {
		return *x.OrderDate
	}
	return ""
}

func (x *UpdateOrderRequest) GetPickupDate() string {
	if x != nil && x.PickupDate != nil {
		return *x.PickupDate
	}
	return ""
}

func (x *UpdateOrderRequest) GetDropoffDate() string {
	if x != nil && x.DropoffDate != nil {
		return *x.DropoffDate
	}
	return ""
}

func (x *UpdateOrderRequest) GetPickupLocation() string {
	if x != nil && x.PickupLocation != nil {
		return *x.PickupLocation
	}
	return ""
}

func (x *UpdateOrderRequest) GetPickupLat() float64 {
	if x != nil && x.PickupLat != nil {
		return *x.PickupLat
	}
	return 0
}

func (x *UpdateOrderRequest) GetPickupLong() float64 {
	if x != nil && x.PickupLong != nil {
		return *x.PickupLong
	}
	return 0
}

func (x *UpdateOrderRequest) GetDropoffLocation() string {
	if x != nil && x.DropoffLocation != nil {
		return *x.DropoffLocation
	}
	return ""
}

func (x *UpdateOrderRequest) GetDropoffLat() float64 {
	if x != nil && x.DropoffLat != nil {
		return *x.DropoffLat
	}
	return 0
}

func (x *UpdateOrderRequest) GetDropoffLong() float64 {
	if x != nil && x.DropoffLong != nil {
		return *x.DropoffLong
	}
	return 0
}

func (x *UpdateOrderRequest) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *UpdateOrderRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DeletedBy int64 `protobuf:"varint,2,opt,name=deleted_by,json=deletedBy,proto3" json:"deleted_by,omitempty"`
}

func (x *DeleteOrderRequest) Reset() {
	*x = DeleteOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrderRequest) ProtoMessage() {}

func (x *DeleteOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrderRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrderRequest) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteOrderRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteOrderRequest) GetDeletedBy() int64 {
	if x != nil {
		return x.DeletedBy
	}
	return 0
}

type DeleteOrderReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteOrderReply) Reset() {
	*x = DeleteOrderReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrderReply) ProtoMessage() {}

func (x *DeleteOrderReply) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrderReply.ProtoReflect.Descriptor instead.
func (*DeleteOrderReply) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteOrderReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetOrderByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CacheControl string `protobuf:"bytes,2,opt,name=cache_control,json=cacheControl,proto3" json:"cache_control,omitempty"`
}

func (x *GetOrderByIDRequest) Reset() {
	*x = GetOrderByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderByIDRequest) ProtoMessage() {}

func (x *GetOrderByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderByIDRequest.ProtoReflect.Descriptor instead.
func (*GetOrderByIDRequest) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{5}
}

func (x *GetOrderByIDRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetOrderByIDRequest) GetCacheControl() string {
	if x != nil {
		return x.CacheControl
	}
	return ""
}

type GetOrderByParamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              *int64   `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	CarId           *int64   `protobuf:"varint,2,opt,name=car_id,json=carId,proto3,oneof" json:"car_id,omitempty"`
	OrderDate       *string  `protobuf:"bytes,3,opt,name=order_date,json=orderDate,proto3,oneof" json:"order_date,omitempty"`
	PickupDate      *string  `protobuf:"bytes,4,opt,name=pickup_date,json=pickupDate,proto3,oneof" json:"pickup_date,omitempty"`
	DropoffDate     *string  `protobuf:"bytes,5,opt,name=dropoff_date,json=dropoffDate,proto3,oneof" json:"dropoff_date,omitempty"`
	PickupLocation  *string  `protobuf:"bytes,6,opt,name=pickup_location,json=pickupLocation,proto3,oneof" json:"pickup_location,omitempty"`
	PickupLat       *float64 `protobuf:"fixed64,7,opt,name=pickup_lat,json=pickupLat,proto3,oneof" json:"pickup_lat,omitempty"`
	PickupLong      *float64 `protobuf:"fixed64,8,opt,name=pickup_long,json=pickupLong,proto3,oneof" json:"pickup_long,omitempty"`
	DropoffLocation *string  `protobuf:"bytes,9,opt,name=dropoff_location,json=dropoffLocation,proto3,oneof" json:"dropoff_location,omitempty"`
	DropoffLat      *float64 `protobuf:"fixed64,10,opt,name=dropoff_lat,json=dropoffLat,proto3,oneof" json:"dropoff_lat,omitempty"`
	DropoffLong     *float64 `protobuf:"fixed64,11,opt,name=dropoff_long,json=dropoffLong,proto3,oneof" json:"dropoff_long,omitempty"`
	OrderBy         *string  `protobuf:"bytes,12,opt,name=order_by,json=orderBy,proto3,oneof" json:"order_by,omitempty"`
	Limit           int64    `protobuf:"varint,13,opt,name=limit,proto3" json:"limit,omitempty"`
	Page            int64    `protobuf:"varint,14,opt,name=page,proto3" json:"page,omitempty"`
	CacheControl    string   `protobuf:"bytes,15,opt,name=cache_control,json=cacheControl,proto3" json:"cache_control,omitempty"`
}

func (x *GetOrderByParamRequest) Reset() {
	*x = GetOrderByParamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderByParamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderByParamRequest) ProtoMessage() {}

func (x *GetOrderByParamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderByParamRequest.ProtoReflect.Descriptor instead.
func (*GetOrderByParamRequest) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{6}
}

func (x *GetOrderByParamRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *GetOrderByParamRequest) GetCarId() int64 {
	if x != nil && x.CarId != nil {
		return *x.CarId
	}
	return 0
}

func (x *GetOrderByParamRequest) GetOrderDate() string {
	if x != nil && x.OrderDate != nil {
		return *x.OrderDate
	}
	return ""
}

func (x *GetOrderByParamRequest) GetPickupDate() string {
	if x != nil && x.PickupDate != nil {
		return *x.PickupDate
	}
	return ""
}

func (x *GetOrderByParamRequest) GetDropoffDate() string {
	if x != nil && x.DropoffDate != nil {
		return *x.DropoffDate
	}
	return ""
}

func (x *GetOrderByParamRequest) GetPickupLocation() string {
	if x != nil && x.PickupLocation != nil {
		return *x.PickupLocation
	}
	return ""
}

func (x *GetOrderByParamRequest) GetPickupLat() float64 {
	if x != nil && x.PickupLat != nil {
		return *x.PickupLat
	}
	return 0
}

func (x *GetOrderByParamRequest) GetPickupLong() float64 {
	if x != nil && x.PickupLong != nil {
		return *x.PickupLong
	}
	return 0
}

func (x *GetOrderByParamRequest) GetDropoffLocation() string {
	if x != nil && x.DropoffLocation != nil {
		return *x.DropoffLocation
	}
	return ""
}

func (x *GetOrderByParamRequest) GetDropoffLat() float64 {
	if x != nil && x.DropoffLat != nil {
		return *x.DropoffLat
	}
	return 0
}

func (x *GetOrderByParamRequest) GetDropoffLong() float64 {
	if x != nil && x.DropoffLong != nil {
		return *x.DropoffLong
	}
	return 0
}

func (x *GetOrderByParamRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

func (x *GetOrderByParamRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetOrderByParamRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetOrderByParamRequest) GetCacheControl() string {
	if x != nil {
		return x.CacheControl
	}
	return ""
}

type GetOrderByParamReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*SingleOrderReply `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *Pagination         `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetOrderByParamReply) Reset() {
	*x = GetOrderByParamReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderByParamReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderByParamReply) ProtoMessage() {}

func (x *GetOrderByParamReply) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderByParamReply.ProtoReflect.Descriptor instead.
func (*GetOrderByParamReply) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{7}
}

func (x *GetOrderByParamReply) GetData() []*SingleOrderReply {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetOrderByParamReply) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type CreateCarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarName   string  `protobuf:"bytes,1,opt,name=car_name,json=carName,proto3" json:"car_name,omitempty"`
	DayRate   float64 `protobuf:"fixed64,2,opt,name=day_rate,json=dayRate,proto3" json:"day_rate,omitempty"`
	MonthRate float64 `protobuf:"fixed64,3,opt,name=month_rate,json=monthRate,proto3" json:"month_rate,omitempty"`
	Image     string  `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	CreatedBy int64   `protobuf:"varint,5,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
}

func (x *CreateCarRequest) Reset() {
	*x = CreateCarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCarRequest) ProtoMessage() {}

func (x *CreateCarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCarRequest.ProtoReflect.Descriptor instead.
func (*CreateCarRequest) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{8}
}

func (x *CreateCarRequest) GetCarName() string {
	if x != nil {
		return x.CarName
	}
	return ""
}

func (x *CreateCarRequest) GetDayRate() float64 {
	if x != nil {
		return x.DayRate
	}
	return 0
}

func (x *CreateCarRequest) GetMonthRate() float64 {
	if x != nil {
		return x.MonthRate
	}
	return 0
}

func (x *CreateCarRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *CreateCarRequest) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

type SingleCarReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CarName   string  `protobuf:"bytes,2,opt,name=car_name,json=carName,proto3" json:"car_name,omitempty"`
	DayRate   float64 `protobuf:"fixed64,3,opt,name=day_rate,json=dayRate,proto3" json:"day_rate,omitempty"`
	MonthRate float64 `protobuf:"fixed64,4,opt,name=month_rate,json=monthRate,proto3" json:"month_rate,omitempty"`
	Image     string  `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	CreatedBy int64   `protobuf:"varint,6,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	CreatedAt string  `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedBy int64   `protobuf:"varint,8,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	UpdatedAt string  `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedBy *int64  `protobuf:"varint,10,opt,name=deleted_by,json=deletedBy,proto3,oneof" json:"deleted_by,omitempty"`
	DeletedAt *string `protobuf:"bytes,11,opt,name=deleted_at,json=deletedAt,proto3,oneof" json:"deleted_at,omitempty"`
}

func (x *SingleCarReply) Reset() {
	*x = SingleCarReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleCarReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleCarReply) ProtoMessage() {}

func (x *SingleCarReply) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleCarReply.ProtoReflect.Descriptor instead.
func (*SingleCarReply) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{9}
}

func (x *SingleCarReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SingleCarReply) GetCarName() string {
	if x != nil {
		return x.CarName
	}
	return ""
}

func (x *SingleCarReply) GetDayRate() float64 {
	if x != nil {
		return x.DayRate
	}
	return 0
}

func (x *SingleCarReply) GetMonthRate() float64 {
	if x != nil {
		return x.MonthRate
	}
	return 0
}

func (x *SingleCarReply) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *SingleCarReply) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *SingleCarReply) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *SingleCarReply) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *SingleCarReply) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *SingleCarReply) GetDeletedBy() int64 {
	if x != nil && x.DeletedBy != nil {
		return *x.DeletedBy
	}
	return 0
}

func (x *SingleCarReply) GetDeletedAt() string {
	if x != nil && x.DeletedAt != nil {
		return *x.DeletedAt
	}
	return ""
}

type UpdateCarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarName   *string  `protobuf:"bytes,1,opt,name=car_name,json=carName,proto3,oneof" json:"car_name,omitempty"`
	DayRate   *float64 `protobuf:"fixed64,2,opt,name=day_rate,json=dayRate,proto3,oneof" json:"day_rate,omitempty"`
	MonthRate *float64 `protobuf:"fixed64,3,opt,name=month_rate,json=monthRate,proto3,oneof" json:"month_rate,omitempty"`
	Image     *string  `protobuf:"bytes,4,opt,name=image,proto3,oneof" json:"image,omitempty"`
	UpdatedBy int64    `protobuf:"varint,5,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	Id        int64    `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateCarRequest) Reset() {
	*x = UpdateCarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCarRequest) ProtoMessage() {}

func (x *UpdateCarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCarRequest.ProtoReflect.Descriptor instead.
func (*UpdateCarRequest) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateCarRequest) GetCarName() string {
	if x != nil && x.CarName != nil {
		return *x.CarName
	}
	return ""
}

func (x *UpdateCarRequest) GetDayRate() float64 {
	if x != nil && x.DayRate != nil {
		return *x.DayRate
	}
	return 0
}

func (x *UpdateCarRequest) GetMonthRate() float64 {
	if x != nil && x.MonthRate != nil {
		return *x.MonthRate
	}
	return 0
}

func (x *UpdateCarRequest) GetImage() string {
	if x != nil && x.Image != nil {
		return *x.Image
	}
	return ""
}

func (x *UpdateCarRequest) GetUpdatedBy() int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *UpdateCarRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteCarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DeletedBy int64 `protobuf:"varint,2,opt,name=deleted_by,json=deletedBy,proto3" json:"deleted_by,omitempty"`
}

func (x *DeleteCarRequest) Reset() {
	*x = DeleteCarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCarRequest) ProtoMessage() {}

func (x *DeleteCarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCarRequest.ProtoReflect.Descriptor instead.
func (*DeleteCarRequest) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteCarRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteCarRequest) GetDeletedBy() int64 {
	if x != nil {
		return x.DeletedBy
	}
	return 0
}

type DeleteCarReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCarReply) Reset() {
	*x = DeleteCarReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCarReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCarReply) ProtoMessage() {}

func (x *DeleteCarReply) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCarReply.ProtoReflect.Descriptor instead.
func (*DeleteCarReply) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteCarReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetCarByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CacheControl string `protobuf:"bytes,2,opt,name=cache_control,json=cacheControl,proto3" json:"cache_control,omitempty"`
}

func (x *GetCarByIDRequest) Reset() {
	*x = GetCarByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCarByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCarByIDRequest) ProtoMessage() {}

func (x *GetCarByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCarByIDRequest.ProtoReflect.Descriptor instead.
func (*GetCarByIDRequest) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{13}
}

func (x *GetCarByIDRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetCarByIDRequest) GetCacheControl() string {
	if x != nil {
		return x.CacheControl
	}
	return ""
}

type GetCarByParamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           *int64   `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	CarName      *string  `protobuf:"bytes,2,opt,name=car_name,json=carName,proto3,oneof" json:"car_name,omitempty"`
	DayRate      *float64 `protobuf:"fixed64,3,opt,name=day_rate,json=dayRate,proto3,oneof" json:"day_rate,omitempty"`
	DayRateGt    *float64 `protobuf:"fixed64,4,opt,name=day_rate_gt,json=dayRateGt,proto3,oneof" json:"day_rate_gt,omitempty"`
	DayRateGte   *float64 `protobuf:"fixed64,5,opt,name=day_rate_gte,json=dayRateGte,proto3,oneof" json:"day_rate_gte,omitempty"`
	DayRateLt    *float64 `protobuf:"fixed64,6,opt,name=day_rate_lt,json=dayRateLt,proto3,oneof" json:"day_rate_lt,omitempty"`
	DayRateLte   *float64 `protobuf:"fixed64,7,opt,name=day_rate_lte,json=dayRateLte,proto3,oneof" json:"day_rate_lte,omitempty"`
	MonthRate    *float64 `protobuf:"fixed64,8,opt,name=month_rate,json=monthRate,proto3,oneof" json:"month_rate,omitempty"`
	MonthRateGt  *float64 `protobuf:"fixed64,9,opt,name=month_rate_gt,json=monthRateGt,proto3,oneof" json:"month_rate_gt,omitempty"`
	MonthRateGte *float64 `protobuf:"fixed64,10,opt,name=month_rate_gte,json=monthRateGte,proto3,oneof" json:"month_rate_gte,omitempty"`
	MonthRateLt  *float64 `protobuf:"fixed64,11,opt,name=month_rate_lt,json=monthRateLt,proto3,oneof" json:"month_rate_lt,omitempty"`
	MonthRateLte *float64 `protobuf:"fixed64,12,opt,name=month_rate_lte,json=monthRateLte,proto3,oneof" json:"month_rate_lte,omitempty"`
	Image        *string  `protobuf:"bytes,13,opt,name=image,proto3,oneof" json:"image,omitempty"`
	OrderBy      *string  `protobuf:"bytes,14,opt,name=order_by,json=orderBy,proto3,oneof" json:"order_by,omitempty"`
	Limit        int64    `protobuf:"varint,15,opt,name=limit,proto3" json:"limit,omitempty"`
	Page         int64    `protobuf:"varint,16,opt,name=page,proto3" json:"page,omitempty"`
	CacheControl string   `protobuf:"bytes,17,opt,name=cache_control,json=cacheControl,proto3" json:"cache_control,omitempty"`
}

func (x *GetCarByParamRequest) Reset() {
	*x = GetCarByParamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCarByParamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCarByParamRequest) ProtoMessage() {}

func (x *GetCarByParamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCarByParamRequest.ProtoReflect.Descriptor instead.
func (*GetCarByParamRequest) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{14}
}

func (x *GetCarByParamRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *GetCarByParamRequest) GetCarName() string {
	if x != nil && x.CarName != nil {
		return *x.CarName
	}
	return ""
}

func (x *GetCarByParamRequest) GetDayRate() float64 {
	if x != nil && x.DayRate != nil {
		return *x.DayRate
	}
	return 0
}

func (x *GetCarByParamRequest) GetDayRateGt() float64 {
	if x != nil && x.DayRateGt != nil {
		return *x.DayRateGt
	}
	return 0
}

func (x *GetCarByParamRequest) GetDayRateGte() float64 {
	if x != nil && x.DayRateGte != nil {
		return *x.DayRateGte
	}
	return 0
}

func (x *GetCarByParamRequest) GetDayRateLt() float64 {
	if x != nil && x.DayRateLt != nil {
		return *x.DayRateLt
	}
	return 0
}

func (x *GetCarByParamRequest) GetDayRateLte() float64 {
	if x != nil && x.DayRateLte != nil {
		return *x.DayRateLte
	}
	return 0
}

func (x *GetCarByParamRequest) GetMonthRate() float64 {
	if x != nil && x.MonthRate != nil {
		return *x.MonthRate
	}
	return 0
}

func (x *GetCarByParamRequest) GetMonthRateGt() float64 {
	if x != nil && x.MonthRateGt != nil {
		return *x.MonthRateGt
	}
	return 0
}

func (x *GetCarByParamRequest) GetMonthRateGte() float64 {
	if x != nil && x.MonthRateGte != nil {
		return *x.MonthRateGte
	}
	return 0
}

func (x *GetCarByParamRequest) GetMonthRateLt() float64 {
	if x != nil && x.MonthRateLt != nil {
		return *x.MonthRateLt
	}
	return 0
}

func (x *GetCarByParamRequest) GetMonthRateLte() float64 {
	if x != nil && x.MonthRateLte != nil {
		return *x.MonthRateLte
	}
	return 0
}

func (x *GetCarByParamRequest) GetImage() string {
	if x != nil && x.Image != nil {
		return *x.Image
	}
	return ""
}

func (x *GetCarByParamRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

func (x *GetCarByParamRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetCarByParamRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetCarByParamRequest) GetCacheControl() string {
	if x != nil {
		return x.CacheControl
	}
	return ""
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentPage    int64  `protobuf:"varint,1,opt,name=current_page,json=currentPage,proto3" json:"current_page,omitempty"`
	CurrentElement int64  `protobuf:"varint,2,opt,name=current_element,json=currentElement,proto3" json:"current_element,omitempty"`
	TotalPages     int64  `protobuf:"varint,3,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	TotalElements  int64  `protobuf:"varint,4,opt,name=total_elements,json=totalElements,proto3" json:"total_elements,omitempty"`
	SortBy         string `protobuf:"bytes,5,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{15}
}

func (x *Pagination) GetCurrentPage() int64 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *Pagination) GetCurrentElement() int64 {
	if x != nil {
		return x.CurrentElement
	}
	return 0
}

func (x *Pagination) GetTotalPages() int64 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *Pagination) GetTotalElements() int64 {
	if x != nil {
		return x.TotalElements
	}
	return 0
}

func (x *Pagination) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

type GetCarByParamReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*SingleCarReply `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *Pagination       `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetCarByParamReply) Reset() {
	*x = GetCarByParamReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCarByParamReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCarByParamReply) ProtoMessage() {}

func (x *GetCarByParamReply) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCarByParamReply.ProtoReflect.Descriptor instead.
func (*GetCarByParamReply) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{16}
}

func (x *GetCarByParamReply) GetData() []*SingleCarReply {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetCarByParamReply) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_order_proto protoreflect.FileDescriptor

var file_order_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x22, 0x85, 0x03, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x63,
	0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x61, 0x72,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66, 0x66, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66,
	0x66, 0x44, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x6c, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x4c, 0x61, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x29,
	0x0a, 0x10, 0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66, 0x66, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66,
	0x66, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x72, 0x6f,
	0x70, 0x6f, 0x66, 0x66, 0x5f, 0x6c, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a,
	0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66, 0x66, 0x4c, 0x61, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x72,
	0x6f, 0x70, 0x6f, 0x66, 0x66, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66, 0x66, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0xd6, 0x04, 0x0a,
	0x10, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x63, 0x61, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x69, 0x63, 0x6b, 0x75,
	0x70, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x69,
	0x63, 0x6b, 0x75, 0x70, 0x44, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70,
	0x6f, 0x66, 0x66, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66, 0x66, 0x44, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70,
	0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x6c,
	0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70,
	0x4c, 0x61, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x6c, 0x6f,
	0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70,
	0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66, 0x66, 0x5f,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66, 0x66, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66, 0x66, 0x5f, 0x6c, 0x61, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66, 0x66, 0x4c, 0x61, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66, 0x66, 0x5f, 0x6c, 0x6f, 0x6e, 0x67,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66, 0x66, 0x4c,
	0x6f, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x22, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0xeb, 0x04, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x06,
	0x63, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x05,
	0x63, 0x61, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b,
	0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x0a, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x44, 0x61, 0x74, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66, 0x66, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0b, 0x64, 0x72, 0x6f, 0x70,
	0x6f, 0x66, 0x66, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x70, 0x69,
	0x63, 0x6b, 0x75, 0x70, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0e, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x69, 0x63, 0x6b,
	0x75, 0x70, 0x5f, 0x6c, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x48, 0x05, 0x52, 0x09,
	0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x4c, 0x61, 0x74, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b,
	0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x01, 0x48, 0x06, 0x52, 0x0a, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x4c, 0x6f, 0x6e, 0x67, 0x88,
	0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66, 0x66, 0x5f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0f,
	0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66, 0x66, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66, 0x66, 0x5f, 0x6c, 0x61,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x48, 0x08, 0x52, 0x0a, 0x64, 0x72, 0x6f, 0x70, 0x6f,
	0x66, 0x66, 0x4c, 0x61, 0x74, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70,
	0x6f, 0x66, 0x66, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x48, 0x09,
	0x52, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66, 0x66, 0x4c, 0x6f, 0x6e, 0x67, 0x88, 0x01, 0x01,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x63, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x69,
	0x63, 0x6b, 0x75, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x64, 0x72,
	0x6f, 0x70, 0x6f, 0x66, 0x66, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x70,
	0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x6c, 0x61, 0x74, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x42, 0x13, 0x0a,
	0x11, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66, 0x66, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66, 0x66, 0x5f, 0x6c,
	0x61, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66, 0x66, 0x5f, 0x6c,
	0x6f, 0x6e, 0x67, 0x22, 0x43, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x22, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4a, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x22, 0xd8, 0x05, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x63, 0x61, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x05, 0x63, 0x61, 0x72, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x69, 0x63, 0x6b,
	0x75, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52,
	0x0a, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26,
	0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66, 0x66, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66, 0x66, 0x44,
	0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70,
	0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x05, 0x52, 0x0e, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x6c,
	0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x48, 0x06, 0x52, 0x09, 0x70, 0x69, 0x63, 0x6b,
	0x75, 0x70, 0x4c, 0x61, 0x74, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x69, 0x63, 0x6b,
	0x75, 0x70, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x48, 0x07, 0x52,
	0x0a, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x4c, 0x6f, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x12, 0x2e,
	0x0a, 0x10, 0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66, 0x66, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0f, 0x64, 0x72, 0x6f, 0x70,
	0x6f, 0x66, 0x66, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x24,
	0x0a, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66, 0x66, 0x5f, 0x6c, 0x61, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x01, 0x48, 0x09, 0x52, 0x0a, 0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66, 0x66, 0x4c, 0x61,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66, 0x66, 0x5f,
	0x6c, 0x6f, 0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x48, 0x0a, 0x52, 0x0b, 0x64, 0x72,
	0x6f, 0x70, 0x6f, 0x66, 0x66, 0x4c, 0x6f, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x42, 0x05, 0x0a, 0x03, 0x5f,
	0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66, 0x66, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x42, 0x12, 0x0a,
	0x10, 0x5f, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x6c, 0x61, 0x74,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x6c, 0x6f, 0x6e, 0x67,
	0x42, 0x13, 0x0a, 0x11, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66, 0x66, 0x5f, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66,
	0x66, 0x5f, 0x6c, 0x61, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66,
	0x66, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x62, 0x79, 0x22, 0x76, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2b, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x31, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9c, 0x01, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x64,
	0x61, 0x79, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x64,
	0x61, 0x79, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x52, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0xed, 0x02, 0x0a, 0x0e, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x61, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x61, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x61, 0x79, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x64, 0x61, 0x79, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x5f, 0x72, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x62, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x22, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f,
	0x62, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0xf3, 0x01, 0x0a, 0x10, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x07, 0x63, 0x61, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x1e, 0x0a, 0x08, 0x64, 0x61, 0x79, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x48, 0x01, 0x52, 0x07, 0x64, 0x61, 0x79, 0x52, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x0a, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x48, 0x02, 0x52, 0x09, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x52, 0x61, 0x74, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x03, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x63, 0x61, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64,
	0x61, 0x79, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x22, 0x41, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f,
	0x62, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x22, 0x20, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x48, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x61, 0x63, 0x68, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x22,
	0xac, 0x06, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x42, 0x79, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a,
	0x08, 0x63, 0x61, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x07, 0x63, 0x61, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a,
	0x08, 0x64, 0x61, 0x79, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x48,
	0x02, 0x52, 0x07, 0x64, 0x61, 0x79, 0x52, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a,
	0x0b, 0x64, 0x61, 0x79, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x67, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x48, 0x03, 0x52, 0x09, 0x64, 0x61, 0x79, 0x52, 0x61, 0x74, 0x65, 0x47, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x25, 0x0a, 0x0c, 0x64, 0x61, 0x79, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x67,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x48, 0x04, 0x52, 0x0a, 0x64, 0x61, 0x79, 0x52,
	0x61, 0x74, 0x65, 0x47, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0b, 0x64, 0x61, 0x79,
	0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x48, 0x05,
	0x52, 0x09, 0x64, 0x61, 0x79, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x74, 0x88, 0x01, 0x01, 0x12, 0x25,
	0x0a, 0x0c, 0x64, 0x61, 0x79, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x74, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x01, 0x48, 0x06, 0x52, 0x0a, 0x64, 0x61, 0x79, 0x52, 0x61, 0x74, 0x65, 0x4c,
	0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x5f, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x48, 0x07, 0x52, 0x09, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x52, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0d, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x67, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01,
	0x48, 0x08, 0x52, 0x0b, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x52, 0x61, 0x74, 0x65, 0x47, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x5f, 0x72, 0x61, 0x74, 0x65,
	0x5f, 0x67, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x48, 0x09, 0x52, 0x0c, 0x6d, 0x6f,
	0x6e, 0x74, 0x68, 0x52, 0x61, 0x74, 0x65, 0x47, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a,
	0x0d, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x01, 0x48, 0x0a, 0x52, 0x0b, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x52, 0x61, 0x74,
	0x65, 0x4c, 0x74, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x48, 0x0b,
	0x52, 0x0c, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x74, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x0c, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x42, 0x05, 0x0a, 0x03, 0x5f,
	0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x61, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x61, 0x79, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x64, 0x61, 0x79, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x67, 0x74, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x64, 0x61, 0x79, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x67, 0x74, 0x65, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x64, 0x61, 0x79, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x74, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x64, 0x61, 0x79, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x74, 0x65, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x42, 0x10, 0x0a,
	0x0e, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x67, 0x74, 0x42,
	0x11, 0x0a, 0x0f, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x67,
	0x74, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x5f, 0x72, 0x61, 0x74,
	0x65, 0x5f, 0x6c, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x5f, 0x72,
	0x61, 0x74, 0x65, 0x5f, 0x6c, 0x74, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x22, 0xb9,
	0x01, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x22, 0x72, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x72, 0x42, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x61, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x31, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0xb7,
	0x05, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a,
	0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x43, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x19, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4f,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x1d, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x3d, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x12, 0x17, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3d,
	0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x12, 0x17, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a,
	0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x12, 0x17, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x61, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x42, 0x79, 0x49, 0x44, 0x12, 0x18, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x42, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1b,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x42, 0x79, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x42, 0x79, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x63, 0x0a, 0x16, 0x69, 0x6f, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x63, 0x68,
	0x77, 0x61, 0x6e, 0x79, 0x75, 0x73, 0x75, 0x66, 0x2f, 0x63, 0x61, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x76, 0x63, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_order_proto_rawDescOnce sync.Once
	file_order_proto_rawDescData = file_order_proto_rawDesc
)

func file_order_proto_rawDescGZIP() []byte {
	file_order_proto_rawDescOnce.Do(func() {
		file_order_proto_rawDescData = protoimpl.X.CompressGZIP(file_order_proto_rawDescData)
	})
	return file_order_proto_rawDescData
}

var file_order_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_order_proto_goTypes = []interface{}{
	(*CreateOrderRequest)(nil),     // 0: order.CreateOrderRequest
	(*SingleOrderReply)(nil),       // 1: order.SingleOrderReply
	(*UpdateOrderRequest)(nil),     // 2: order.UpdateOrderRequest
	(*DeleteOrderRequest)(nil),     // 3: order.DeleteOrderRequest
	(*DeleteOrderReply)(nil),       // 4: order.DeleteOrderReply
	(*GetOrderByIDRequest)(nil),    // 5: order.GetOrderByIDRequest
	(*GetOrderByParamRequest)(nil), // 6: order.GetOrderByParamRequest
	(*GetOrderByParamReply)(nil),   // 7: order.GetOrderByParamReply
	(*CreateCarRequest)(nil),       // 8: order.CreateCarRequest
	(*SingleCarReply)(nil),         // 9: order.SingleCarReply
	(*UpdateCarRequest)(nil),       // 10: order.UpdateCarRequest
	(*DeleteCarRequest)(nil),       // 11: order.DeleteCarRequest
	(*DeleteCarReply)(nil),         // 12: order.DeleteCarReply
	(*GetCarByIDRequest)(nil),      // 13: order.GetCarByIDRequest
	(*GetCarByParamRequest)(nil),   // 14: order.GetCarByParamRequest
	(*Pagination)(nil),             // 15: order.pagination
	(*GetCarByParamReply)(nil),     // 16: order.GetCarByParamReply
}
var file_order_proto_depIdxs = []int32{
	1,  // 0: order.GetOrderByParamReply.data:type_name -> order.SingleOrderReply
	15, // 1: order.GetOrderByParamReply.pagination:type_name -> order.pagination
	9,  // 2: order.GetCarByParamReply.data:type_name -> order.SingleCarReply
	15, // 3: order.GetCarByParamReply.pagination:type_name -> order.pagination
	0,  // 4: order.Order.CreateOrder:input_type -> order.CreateOrderRequest
	2,  // 5: order.Order.UpdateOrder:input_type -> order.UpdateOrderRequest
	3,  // 6: order.Order.DeleteOrder:input_type -> order.DeleteOrderRequest
	5,  // 7: order.Order.GetOrderByID:input_type -> order.GetOrderByIDRequest
	6,  // 8: order.Order.GetOrderByParam:input_type -> order.GetOrderByParamRequest
	8,  // 9: order.Order.CreateCar:input_type -> order.CreateCarRequest
	10, // 10: order.Order.UpdateCar:input_type -> order.UpdateCarRequest
	11, // 11: order.Order.DeleteCar:input_type -> order.DeleteCarRequest
	13, // 12: order.Order.GetCarByID:input_type -> order.GetCarByIDRequest
	14, // 13: order.Order.GetCarByParam:input_type -> order.GetCarByParamRequest
	1,  // 14: order.Order.CreateOrder:output_type -> order.SingleOrderReply
	1,  // 15: order.Order.UpdateOrder:output_type -> order.SingleOrderReply
	4,  // 16: order.Order.DeleteOrder:output_type -> order.DeleteOrderReply
	1,  // 17: order.Order.GetOrderByID:output_type -> order.SingleOrderReply
	7,  // 18: order.Order.GetOrderByParam:output_type -> order.GetOrderByParamReply
	9,  // 19: order.Order.CreateCar:output_type -> order.SingleCarReply
	9,  // 20: order.Order.UpdateCar:output_type -> order.SingleCarReply
	12, // 21: order.Order.DeleteCar:output_type -> order.DeleteCarReply
	9,  // 22: order.Order.GetCarByID:output_type -> order.SingleCarReply
	16, // 23: order.Order.GetCarByParam:output_type -> order.GetCarByParamReply
	14, // [14:24] is the sub-list for method output_type
	4,  // [4:14] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_order_proto_init() }
func file_order_proto_init() {
	if File_order_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_order_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleOrderReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrderReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderByParamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderByParamReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleCarReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCarReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCarByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCarByParamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCarByParamReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_order_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_order_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_order_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_order_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_order_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_order_proto_msgTypes[14].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_order_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_order_proto_goTypes,
		DependencyIndexes: file_order_proto_depIdxs,
		MessageInfos:      file_order_proto_msgTypes,
	}.Build()
	File_order_proto = out.File
	file_order_proto_rawDesc = nil
	file_order_proto_goTypes = nil
	file_order_proto_depIdxs = nil
}
