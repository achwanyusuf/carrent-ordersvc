// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "CarRent Support",
            "url": "https://www.carrent.com/support",
            "email": "support@carrent.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/car": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Get cars data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "car"
                ],
                "summary": "Get cars data",
                "parameters": [
                    {
                        "type": "number",
                        "description": "search by id",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search by car name",
                        "name": "car_name",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "search by day rate",
                        "name": "day_rate",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "search by day rate greater than",
                        "name": "day_rate_gt",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "search by day rate greater than equal",
                        "name": "day_rate_gte",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "search by day rate less than",
                        "name": "day_rate_lt",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "search by day rate less than equal",
                        "name": "day_rate_lte",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "search by month rate",
                        "name": "month_rate",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "search by month rate greater than",
                        "name": "month_rate_gt",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "search by month rate greater than equal",
                        "name": "month_rate_gte",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "search by month rate less than",
                        "name": "month_rate_lt",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "search by month rate less than equal",
                        "name": "month_rate_lte",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search by image",
                        "name": "image",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": " ",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": " ",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "must-revalidate",
                            "none"
                        ],
                        "type": "string",
                        "description": "Request Cache Control",
                        "name": "Cache-Control",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CarsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.CarsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.CarsResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Create car data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "car"
                ],
                "summary": "Create Car",
                "parameters": [
                    {
                        "description": "Car Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateCar"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SingleCarResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.SingleCarResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.SingleCarResponse"
                        }
                    }
                }
            }
        },
        "/car/{id}": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Get cars data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "car"
                ],
                "summary": "Get cars data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "get by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "must-revalidate",
                            "none"
                        ],
                        "type": "string",
                        "description": "Request Cache Control",
                        "name": "Cache-Control",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SingleCarResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.SingleCarResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.SingleCarResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Update car data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "car"
                ],
                "summary": "Update car data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "update by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Car Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateCar"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SingleCarResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.SingleCarResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.SingleCarResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Delete car data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "car"
                ],
                "summary": "Delete car data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "delete by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.EmptyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.EmptyResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.EmptyResponse"
                        }
                    }
                }
            }
        },
        "/order": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Get orders data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Get orders data",
                "parameters": [
                    {
                        "type": "number",
                        "description": "search by id",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "search by car id",
                        "name": "car_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search by order date",
                        "name": "order_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search by pickup date",
                        "name": "pickup_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search by dropoff date",
                        "name": "dropoff_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search by pickup location",
                        "name": "pickup_location",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search by lat",
                        "name": "pickup_lat",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search by long",
                        "name": "pickup_long",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search by dropoff location",
                        "name": "dropoff_location",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search by lat",
                        "name": "dropoff_lat",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search by long",
                        "name": "dropoff_long",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": " ",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": " ",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "must-revalidate",
                            "none"
                        ],
                        "type": "string",
                        "description": "Request Cache Control",
                        "name": "Cache-Control",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.OrdersResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.OrdersResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.OrdersResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Create order data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Create Order",
                "parameters": [
                    {
                        "description": "Order Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SingleOrderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.SingleOrderResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.SingleOrderResponse"
                        }
                    }
                }
            }
        },
        "/order/{id}": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Get orders data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Get orders data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "get by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "must-revalidate",
                            "none"
                        ],
                        "type": "string",
                        "description": "Request Cache Control",
                        "name": "Cache-Control",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SingleOrderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.SingleOrderResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.SingleOrderResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Update order data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Update order data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "update by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Order Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SingleOrderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.SingleOrderResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.SingleOrderResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Delete order data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Delete order data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "delete by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.EmptyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.EmptyResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.EmptyResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Car": {
            "type": "object",
            "properties": {
                "car_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "day_rate": {
                    "type": "number"
                },
                "deleted_at": {
                    "type": "string",
                    "example": "2019-08-13T00:00:00Z"
                },
                "deleted_by": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "month_rate": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "integer"
                }
            }
        },
        "model.CarsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Car"
                    }
                },
                "message": {
                    "type": "string"
                },
                "pagination": {
                    "$ref": "#/definitions/model.Pagination"
                },
                "status_code": {
                    "type": "integer"
                },
                "transaction_info": {
                    "$ref": "#/definitions/model.TransactionInfo"
                },
                "translation": {
                    "$ref": "#/definitions/model.Translation"
                }
            }
        },
        "model.CreateCar": {
            "type": "object",
            "required": [
                "car_name",
                "day_rate",
                "image",
                "month_rate"
            ],
            "properties": {
                "car_name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 8
                },
                "day_rate": {
                    "type": "number",
                    "maximum": 1000000,
                    "minimum": 10000
                },
                "image": {
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 5
                },
                "month_rate": {
                    "type": "number",
                    "maximum": 30000000,
                    "minimum": 250000
                }
            }
        },
        "model.CreateOrder": {
            "type": "object",
            "required": [
                "car_id",
                "dropoff_date",
                "dropoff_lat",
                "dropoff_location",
                "dropoff_long",
                "order_date",
                "pickup_date",
                "pickup_lat",
                "pickup_location",
                "pickup_long"
            ],
            "properties": {
                "car_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "dropoff_date": {
                    "type": "string"
                },
                "dropoff_lat": {
                    "type": "number",
                    "maximum": 90,
                    "minimum": -90
                },
                "dropoff_location": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 30
                },
                "dropoff_long": {
                    "type": "number",
                    "maximum": 180,
                    "minimum": -180
                },
                "order_date": {
                    "type": "string",
                    "example": "2024-02-02T00:00:00Z"
                },
                "pickup_date": {
                    "type": "string",
                    "example": "2024-02-02T00:00:00Z"
                },
                "pickup_lat": {
                    "type": "number",
                    "maximum": 90,
                    "minimum": -90
                },
                "pickup_location": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 30
                },
                "pickup_long": {
                    "type": "number",
                    "maximum": 180,
                    "minimum": -180
                }
            }
        },
        "model.EmptyResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                },
                "transaction_info": {
                    "$ref": "#/definitions/model.TransactionInfo"
                },
                "translation": {
                    "$ref": "#/definitions/model.Translation"
                }
            }
        },
        "model.Order": {
            "type": "object",
            "properties": {
                "car_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string",
                    "example": "2019-08-13T00:00:00Z"
                },
                "deleted_by": {
                    "type": "string"
                },
                "dropoff_date": {
                    "type": "string"
                },
                "dropoff_lat": {
                    "type": "number"
                },
                "dropoff_location": {
                    "type": "string"
                },
                "dropoff_long": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "order_date": {
                    "type": "string"
                },
                "pickup_date": {
                    "type": "string"
                },
                "pickup_lat": {
                    "type": "number"
                },
                "pickup_location": {
                    "type": "string"
                },
                "pickup_long": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "integer"
                }
            }
        },
        "model.OrdersResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Order"
                    }
                },
                "message": {
                    "type": "string"
                },
                "pagination": {
                    "$ref": "#/definitions/model.Pagination"
                },
                "status_code": {
                    "type": "integer"
                },
                "transaction_info": {
                    "$ref": "#/definitions/model.TransactionInfo"
                },
                "translation": {
                    "$ref": "#/definitions/model.Translation"
                }
            }
        },
        "model.Pagination": {
            "type": "object",
            "properties": {
                "current_element": {
                    "type": "integer"
                },
                "current_page": {
                    "type": "integer"
                },
                "sort_by": {
                    "type": "string"
                },
                "total_elements": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "model.SingleCarResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.Car"
                },
                "message": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                },
                "transaction_info": {
                    "$ref": "#/definitions/model.TransactionInfo"
                },
                "translation": {
                    "$ref": "#/definitions/model.Translation"
                }
            }
        },
        "model.SingleOrderResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.Order"
                },
                "message": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                },
                "transaction_info": {
                    "$ref": "#/definitions/model.TransactionInfo"
                },
                "translation": {
                    "$ref": "#/definitions/model.Translation"
                }
            }
        },
        "model.TransactionInfo": {
            "type": "object",
            "properties": {
                "cause": {
                    "type": "string"
                },
                "error_code": {
                    "type": "integer"
                },
                "request_id": {
                    "type": "string"
                },
                "request_method": {
                    "type": "string"
                },
                "request_uri": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "model.Translation": {
            "type": "object",
            "properties": {
                "en": {
                    "type": "string"
                }
            }
        },
        "model.UpdateCar": {
            "type": "object",
            "required": [
                "car_name",
                "day_rate",
                "image",
                "month_rate"
            ],
            "properties": {
                "car_name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 8
                },
                "day_rate": {
                    "type": "number",
                    "maximum": 1000000,
                    "minimum": 10000
                },
                "image": {
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 5
                },
                "month_rate": {
                    "type": "number",
                    "maximum": 30000000,
                    "minimum": 250000
                }
            }
        },
        "model.UpdateOrder": {
            "type": "object",
            "required": [
                "car_id",
                "dropoff_date",
                "dropoff_lat",
                "dropoff_location",
                "dropoff_long",
                "order_date",
                "pickup_date",
                "pickup_lat",
                "pickup_location",
                "pickup_long"
            ],
            "properties": {
                "car_id": {
                    "type": "number",
                    "minimum": 1
                },
                "dropoff_date": {
                    "type": "string",
                    "example": "2024-02-02T00:00:00Z"
                },
                "dropoff_lat": {
                    "type": "number",
                    "maximum": 90,
                    "minimum": -90
                },
                "dropoff_location": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 30
                },
                "dropoff_long": {
                    "type": "number",
                    "maximum": 180,
                    "minimum": -180
                },
                "order_date": {
                    "type": "string",
                    "example": "2024-02-02T00:00:00Z"
                },
                "pickup_date": {
                    "type": "string",
                    "example": "2024-02-02T00:00:00Z"
                },
                "pickup_lat": {
                    "type": "number",
                    "maximum": 90,
                    "minimum": -90
                },
                "pickup_location": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 30
                },
                "pickup_long": {
                    "type": "number",
                    "maximum": 180,
                    "minimum": -180
                }
            }
        }
    },
    "securityDefinitions": {
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "tokenUrl": "%s"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
